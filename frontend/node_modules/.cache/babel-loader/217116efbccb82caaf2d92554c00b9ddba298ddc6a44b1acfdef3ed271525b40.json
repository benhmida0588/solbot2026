{"ast":null,"code":"var _jsxFileName = \"/root/solana-trading-bot/frontend/src/components/WalletTable.tsx\";\nimport React from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WalletTable = ({\n  wallets,\n  onCreateWallets,\n  onFundWallets,\n  onTradeWallets\n}) => {\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      p: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Sub-Wallets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Public Key\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"SOL Balance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Token Balances\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Trade Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: wallets.map(wallet => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: [wallet.publicKey.slice(0, 8), \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [(wallet.solBalance / 1000000000).toFixed(4), \" SOL\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: Object.entries(wallet.tokenBalances).map(([mint, balance]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [mint.slice(0, 8), \"...: \", balance]\n              }, mint, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: wallet.tradeStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, wallet.publicKey, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      sx: {\n        mt: 2,\n        mr: 1\n      },\n      onClick: onCreateWallets,\n      children: \"Create Wallets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      sx: {\n        mt: 2,\n        mr: 1\n      },\n      onClick: onFundWallets,\n      children: \"Fund Wallets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      sx: {\n        mt: 2\n      },\n      onClick: onTradeWallets,\n      children: \"Trade Wallets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c = WalletTable;\nexport default WalletTable;\nvar _c;\n$RefreshReg$(_c, \"WalletTable\");","map":{"version":3,"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","Typography","jsxDEV","_jsxDEV","WalletTable","wallets","onCreateWallets","onFundWallets","onTradeWallets","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","wallet","publicKey","slice","solBalance","toFixed","Object","entries","tokenBalances","mint","balance","tradeStatus","mt","mr","onClick","_c","$RefreshReg$"],"sources":["/root/solana-trading-bot/frontend/src/components/WalletTable.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  Typography,\r\n} from '@mui/material';\r\n\r\ninterface Wallet {\r\n  publicKey: string;\r\n  solBalance: number;\r\n  tokenBalances: { [mint: string]: number };\r\n  tradeStatus: string;\r\n}\r\n\r\ninterface WalletTableProps {\r\n  wallets: Wallet[];\r\n  onCreateWallets: () => void;\r\n  onFundWallets: () => void;\r\n  onTradeWallets: () => void;\r\n}\r\n\r\nconst WalletTable: React.FC<WalletTableProps> = ({\r\n  wallets,\r\n  onCreateWallets,\r\n  onFundWallets,\r\n  onTradeWallets,\r\n}) => {\r\n  return (\r\n    <Paper sx={{ p: 2 }}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Sub-Wallets\r\n      </Typography>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Public Key</TableCell>\r\n              <TableCell>SOL Balance</TableCell>\r\n              <TableCell>Token Balances</TableCell>\r\n              <TableCell>Trade Status</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {wallets.map((wallet) => (\r\n              <TableRow key={wallet.publicKey}>\r\n                <TableCell>{wallet.publicKey.slice(0, 8)}...</TableCell>\r\n                <TableCell>\r\n                  {(wallet.solBalance / 1_000_000_000).toFixed(4)} SOL\r\n                </TableCell>\r\n                <TableCell>\r\n                  {Object.entries(wallet.tokenBalances).map(([mint, balance]) => (\r\n                    <div key={mint}>\r\n                      {mint.slice(0, 8)}...: {balance}\r\n                    </div>\r\n                  ))}\r\n                </TableCell>\r\n                <TableCell>{wallet.tradeStatus}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Button\r\n        variant=\"contained\"\r\n        sx={{ mt: 2, mr: 1 }}\r\n        onClick={onCreateWallets}\r\n      >\r\n        Create Wallets\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        sx={{ mt: 2, mr: 1 }}\r\n        onClick={onFundWallets}\r\n      >\r\n        Fund Wallets\r\n      </Button>\r\n      <Button variant=\"contained\" sx={{ mt: 2 }} onClick={onTradeWallets}>\r\n        Trade Wallets\r\n      </Button>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default WalletTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}