{"ast":null,"code":"var _jsxFileName = \"/root/solana-trading-bot/frontend/src/components/ConfigForm.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Box, TextField, Button, MenuItem, Select, FormControl, InputLabel } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConfigForm = ({\n  config,\n  onConfigUpdate\n}) => {\n  _s();\n  var _config$swapAmount, _config$tradeMode, _config$concurrencyLi, _config$tokenAddress, _config$swapAmountLam, _config$tokenList, _formConfig$swapAmoun, _formConfig$tradeMode, _formConfig$concurren, _formConfig$tokenAddr, _formConfig$swapAmoun2, _formConfig$tokenList;\n  const [formConfig, setFormConfig] = React.useState({\n    swapAmount: (_config$swapAmount = config === null || config === void 0 ? void 0 : config.swapAmount) !== null && _config$swapAmount !== void 0 ? _config$swapAmount : 0,\n    tradeMode: (_config$tradeMode = config === null || config === void 0 ? void 0 : config.tradeMode) !== null && _config$tradeMode !== void 0 ? _config$tradeMode : 'auto',\n    concurrencyLimit: (_config$concurrencyLi = config === null || config === void 0 ? void 0 : config.concurrencyLimit) !== null && _config$concurrencyLi !== void 0 ? _config$concurrencyLi : 1,\n    tokenAddress: (_config$tokenAddress = config === null || config === void 0 ? void 0 : config.tokenAddress) !== null && _config$tokenAddress !== void 0 ? _config$tokenAddress : '',\n    swapAmountLamports: (_config$swapAmountLam = config === null || config === void 0 ? void 0 : config.swapAmountLamports) !== null && _config$swapAmountLam !== void 0 ? _config$swapAmountLam : 1000000,\n    tokenList: (_config$tokenList = config === null || config === void 0 ? void 0 : config.tokenList) !== null && _config$tokenList !== void 0 ? _config$tokenList : []\n  });\n  const handleChange = e => {\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    if (name) {\n      setFormConfig(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const handleTokenListChange = newTokenList => {\n    setFormConfig(prev => ({\n      ...prev,\n      tokenList: newTokenList\n    }));\n  };\n  const handleSubmit = () => {\n    onConfigUpdate(formConfig);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 2,\n      border: '1px solid grey'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Swap Amount (SOL)\",\n      name: \"swapAmount\",\n      type: \"number\",\n      value: (_formConfig$swapAmoun = formConfig.swapAmount) !== null && _formConfig$swapAmoun !== void 0 ? _formConfig$swapAmoun : '',\n      onChange: handleChange,\n      fullWidth: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      margin: \"normal\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Trade Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        name: \"tradeMode\",\n        value: (_formConfig$tradeMode = formConfig.tradeMode) !== null && _formConfig$tradeMode !== void 0 ? _formConfig$tradeMode : 'auto',\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"auto\",\n          children: \"Auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"manual\",\n          children: \"Manual\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Concurrency Limit\",\n      name: \"concurrencyLimit\",\n      type: \"number\",\n      value: (_formConfig$concurren = formConfig.concurrencyLimit) !== null && _formConfig$concurren !== void 0 ? _formConfig$concurren : '',\n      onChange: handleChange,\n      fullWidth: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Token Address\",\n      name: \"tokenAddress\",\n      value: (_formConfig$tokenAddr = formConfig.tokenAddress) !== null && _formConfig$tokenAddr !== void 0 ? _formConfig$tokenAddr : '',\n      onChange: handleChange,\n      fullWidth: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Swap Amount (Lamports)\",\n      name: \"swapAmountLamports\",\n      type: \"number\",\n      value: (_formConfig$swapAmoun2 = formConfig.swapAmountLamports) !== null && _formConfig$swapAmoun2 !== void 0 ? _formConfig$swapAmoun2 : '',\n      onChange: handleChange,\n      fullWidth: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Token List (JSON)\",\n      name: \"tokenList\",\n      value: JSON.stringify((_formConfig$tokenList = formConfig.tokenList) !== null && _formConfig$tokenList !== void 0 ? _formConfig$tokenList : []),\n      onChange: e => {\n        try {\n          const tokens = JSON.parse(e.target.value);\n          handleTokenListChange(tokens);\n        } catch {}\n      },\n      fullWidth: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleSubmit,\n      sx: {\n        mt: 2\n      },\n      children: \"Update Config\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(ConfigForm, \"NUFFl3dau2PMHgmP6i6nPGjV7Mo=\");\n_c = ConfigForm;\nexport default ConfigForm;\nvar _c;\n$RefreshReg$(_c, \"ConfigForm\");","map":{"version":3,"names":["React","Box","TextField","Button","MenuItem","Select","FormControl","InputLabel","jsxDEV","_jsxDEV","ConfigForm","config","onConfigUpdate","_s","_config$swapAmount","_config$tradeMode","_config$concurrencyLi","_config$tokenAddress","_config$swapAmountLam","_config$tokenList","_formConfig$swapAmoun","_formConfig$tradeMode","_formConfig$concurren","_formConfig$tokenAddr","_formConfig$swapAmoun2","_formConfig$tokenList","formConfig","setFormConfig","useState","swapAmount","tradeMode","concurrencyLimit","tokenAddress","swapAmountLamports","tokenList","handleChange","e","target","name","value","prev","handleTokenListChange","newTokenList","handleSubmit","sx","p","border","children","label","type","onChange","fullWidth","margin","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","tokens","parse","variant","onClick","mt","_c","$RefreshReg$"],"sources":["/root/solana-trading-bot/frontend/src/components/ConfigForm.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Box, TextField, Button, MenuItem, Select, FormControl, InputLabel } from '@mui/material';\r\nimport { SelectChangeEvent } from '@mui/material/Select';\r\nimport { Config } from '../types';\r\n\r\ninterface ConfigFormProps {\r\n  config: Config | null;\r\n  onConfigUpdate: (newConfig: Partial<Config>) => void;\r\n}\r\n\r\nconst ConfigForm: React.FC<ConfigFormProps> = ({ config, onConfigUpdate }) => {\r\n  const [formConfig, setFormConfig] = React.useState<Partial<Config>>({\r\n    swapAmount: config?.swapAmount ?? 0,\r\n    tradeMode: config?.tradeMode ?? 'auto',\r\n    concurrencyLimit: config?.concurrencyLimit ?? 1,\r\n    tokenAddress: config?.tokenAddress ?? '',\r\n    swapAmountLamports: config?.swapAmountLamports ?? 1000000,\r\n    tokenList: config?.tokenList ?? [],\r\n  });\r\n\r\n  const handleChange = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement> | SelectChangeEvent<string>\r\n  ) => {\r\n    const target = e.target as HTMLInputElement | HTMLTextAreaElement | { name?: string; value: unknown };\r\n    const name = target.name;\r\n    const value = target.value;\r\n    if (name) {\r\n      setFormConfig((prev) => ({ ...prev, [name]: value }));\r\n    }\r\n  };\r\n\r\n  const handleTokenListChange = (newTokenList: { symbol: string; mint: string }[]) => {\r\n    setFormConfig((prev) => ({ ...prev, tokenList: newTokenList }));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    onConfigUpdate(formConfig);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 2, border: '1px solid grey' }}>\r\n      <TextField\r\n        label=\"Swap Amount (SOL)\"\r\n        name=\"swapAmount\"\r\n        type=\"number\"\r\n        value={formConfig.swapAmount ?? ''}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <FormControl fullWidth margin=\"normal\">\r\n        <InputLabel>Trade Mode</InputLabel>\r\n        <Select\r\n          name=\"tradeMode\"\r\n          value={formConfig.tradeMode ?? 'auto'}\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value=\"auto\">Auto</MenuItem>\r\n          <MenuItem value=\"manual\">Manual</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <TextField\r\n        label=\"Concurrency Limit\"\r\n        name=\"concurrencyLimit\"\r\n        type=\"number\"\r\n        value={formConfig.concurrencyLimit ?? ''}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Token Address\"\r\n        name=\"tokenAddress\"\r\n        value={formConfig.tokenAddress ?? ''}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Swap Amount (Lamports)\"\r\n        name=\"swapAmountLamports\"\r\n        type=\"number\"\r\n        value={formConfig.swapAmountLamports ?? ''}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Token List (JSON)\"\r\n        name=\"tokenList\"\r\n        value={JSON.stringify(formConfig.tokenList ?? [])}\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n          try {\r\n            const tokens = JSON.parse(e.target.value);\r\n            handleTokenListChange(tokens);\r\n          } catch {}\r\n        }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <Button variant=\"contained\" onClick={handleSubmit} sx={{ mt: 2 }}>\r\n        Update Config\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ConfigForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}