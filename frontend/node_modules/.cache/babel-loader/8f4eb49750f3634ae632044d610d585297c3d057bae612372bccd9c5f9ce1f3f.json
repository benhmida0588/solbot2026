{"ast":null,"code":"var _jsxFileName = \"/root/solana-trading-bot/frontend/src/components/WalletTable.tsx\";\nimport React from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WalletTable = ({\n  wallets,\n  onTradeWallets\n}) => {\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    elevation: 0,\n    sx: {\n      mt: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Public Key\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"SOL Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Token Balances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Trade Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: wallets.length === 0 ? /*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 4,\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              children: \"No wallets created\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this) : wallets.map(wallet => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: [wallet.publicKey.slice(0, 8), \"...\", wallet.publicKey.slice(-8)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: [(wallet.solBalance / 1000000000).toFixed(4), \" SOL\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: Object.entries(wallet.tokenBalances).map(([token, amount]) => `${token}: ${amount}`).join(', ') || 'None'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: wallet.tradeStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)]\n        }, wallet.publicKey, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2,\n        textAlign: 'right'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: onTradeWallets,\n        disabled: wallets.length === 0,\n        children: \"Trade Wallets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = WalletTable;\nexport default WalletTable;\nvar _c;\n$RefreshReg$(_c, \"WalletTable\");","map":{"version":3,"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","Typography","jsxDEV","_jsxDEV","WalletTable","wallets","onTradeWallets","component","elevation","sx","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","align","length","colSpan","color","map","wallet","publicKey","slice","solBalance","toFixed","Object","entries","tokenBalances","token","amount","join","tradeStatus","Box","textAlign","variant","onClick","disabled","_c","$RefreshReg$"],"sources":["/root/solana-trading-bot/frontend/src/components/WalletTable.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  Typography,\r\n} from '@mui/material';\r\n\r\ninterface Wallet {\r\n  publicKey: string;\r\n  solBalance: number;\r\n  tokenBalances: { [key: string]: number };\r\n  tradeStatus: string;\r\n}\r\n\r\ninterface WalletTableProps {\r\n  wallets: Wallet[];\r\n  onTradeWallets: () => void;\r\n}\r\n\r\nconst WalletTable: React.FC<WalletTableProps> = ({ wallets, onTradeWallets }) => {\r\n  return (\r\n    <TableContainer component={Paper} elevation={0} sx={{ mt: 2 }}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Public Key</TableCell>\r\n            <TableCell align=\"right\">SOL Balance</TableCell>\r\n            <TableCell align=\"right\">Token Balances</TableCell>\r\n            <TableCell align=\"right\">Trade Status</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {wallets.length === 0 ? (\r\n            <TableRow>\r\n              <TableCell colSpan={4} align=\"center\">\r\n                <Typography color=\"text.secondary\">No wallets created</Typography>\r\n              </TableCell>\r\n            </TableRow>\r\n          ) : (\r\n            wallets.map((wallet) => (\r\n              <TableRow key={wallet.publicKey}>\r\n                <TableCell>\r\n                  {wallet.publicKey.slice(0, 8)}...{wallet.publicKey.slice(-8)}\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  {(wallet.solBalance / 1_000_000_000).toFixed(4)} SOL\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  {Object.entries(wallet.tokenBalances)\r\n                    .map(([token, amount]) => `${token}: ${amount}`)\r\n                    .join(', ') || 'None'}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{wallet.tradeStatus}</TableCell>\r\n              </TableRow>\r\n            ))\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n      <Box sx={{ mt: 2, textAlign: 'right' }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={onTradeWallets}\r\n          disabled={wallets.length === 0}\r\n        >\r\n          Trade Wallets\r\n        </Button>\r\n      </Box>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default WalletTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}