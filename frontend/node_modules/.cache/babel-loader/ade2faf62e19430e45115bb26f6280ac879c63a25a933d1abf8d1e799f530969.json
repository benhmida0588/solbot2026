{"ast":null,"code":"import React from'react';import{Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,Typography}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TransactionLog=_ref=>{let{logs}=_ref;return/*#__PURE__*/_jsx(TableContainer,{component:Paper,elevation:0,children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Wallet\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Type\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Signature\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Status\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Details\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Timestamp\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:logs.length===0?/*#__PURE__*/_jsx(TableRow,{children:/*#__PURE__*/_jsx(TableCell,{colSpan:6,align:\"center\",children:/*#__PURE__*/_jsx(Typography,{color:\"text.secondary\",children:\"No transactions\"})})}):logs.map((log,index)=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsxs(TableCell,{children:[log.wallet.slice(0,8),\"...\"]}),/*#__PURE__*/_jsx(TableCell,{children:log.type}),/*#__PURE__*/_jsxs(TableCell,{children:[log.signature.slice(0,8),\"...\"]}),/*#__PURE__*/_jsx(TableCell,{children:log.status}),/*#__PURE__*/_jsx(TableCell,{children:log.details}),/*#__PURE__*/_jsx(TableCell,{children:new Date(log.timestamp).toLocaleString()})]},index))})]})});};export default TransactionLog;","map":{"version":3,"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Typography","jsx","_jsx","jsxs","_jsxs","TransactionLog","_ref","logs","component","elevation","children","length","colSpan","align","color","map","log","index","wallet","slice","type","signature","status","details","Date","timestamp","toLocaleString"],"sources":["/root/solana-trading-bot/frontend/src/components/TransactionLog.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography } from '@mui/material';\r\n\r\ninterface TransactionLogEntry {\r\n  wallet: string;\r\n  type: string;\r\n  signature: string;\r\n  status: string;\r\n  details: string;\r\n  timestamp: string;\r\n}\r\n\r\ninterface TransactionLogProps {\r\n  logs: TransactionLogEntry[];\r\n}\r\n\r\nconst TransactionLog: React.FC<TransactionLogProps> = ({ logs }) => {\r\n  return (\r\n    <TableContainer component={Paper} elevation={0}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Wallet</TableCell>\r\n            <TableCell>Type</TableCell>\r\n            <TableCell>Signature</TableCell>\r\n            <TableCell>Status</TableCell>\r\n            <TableCell>Details</TableCell>\r\n            <TableCell>Timestamp</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {logs.length === 0 ? (\r\n            <TableRow>\r\n              <TableCell colSpan={6} align=\"center\">\r\n                <Typography color=\"text.secondary\">No transactions</Typography>\r\n              </TableCell>\r\n            </TableRow>\r\n          ) : (\r\n            logs.map((log, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>{log.wallet.slice(0, 8)}...</TableCell>\r\n                <TableCell>{log.type}</TableCell>\r\n                <TableCell>{log.signature.slice(0, 8)}...</TableCell>\r\n                <TableCell>{log.status}</TableCell>\r\n                <TableCell>{log.details}</TableCell>\r\n                <TableCell>{new Date(log.timestamp).toLocaleString()}</TableCell>\r\n              </TableRow>\r\n            ))\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default TransactionLog;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,KAAK,CAAEC,SAAS,CAAEC,SAAS,CAAEC,cAAc,CAAEC,SAAS,CAAEC,QAAQ,CAAEC,KAAK,CAAEC,UAAU,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAepH,KAAM,CAAAC,cAA6C,CAAGC,IAAA,EAAc,IAAb,CAAEC,IAAK,CAAC,CAAAD,IAAA,CAC7D,mBACEJ,IAAA,CAACN,cAAc,EAACY,SAAS,CAAET,KAAM,CAACU,SAAS,CAAE,CAAE,CAAAC,QAAA,cAC7CN,KAAA,CAACX,KAAK,EAAAiB,QAAA,eACJR,IAAA,CAACL,SAAS,EAAAa,QAAA,cACRN,KAAA,CAACN,QAAQ,EAAAY,QAAA,eACPR,IAAA,CAACP,SAAS,EAAAe,QAAA,CAAC,QAAM,CAAW,CAAC,cAC7BR,IAAA,CAACP,SAAS,EAAAe,QAAA,CAAC,MAAI,CAAW,CAAC,cAC3BR,IAAA,CAACP,SAAS,EAAAe,QAAA,CAAC,WAAS,CAAW,CAAC,cAChCR,IAAA,CAACP,SAAS,EAAAe,QAAA,CAAC,QAAM,CAAW,CAAC,cAC7BR,IAAA,CAACP,SAAS,EAAAe,QAAA,CAAC,SAAO,CAAW,CAAC,cAC9BR,IAAA,CAACP,SAAS,EAAAe,QAAA,CAAC,WAAS,CAAW,CAAC,EACxB,CAAC,CACF,CAAC,cACZR,IAAA,CAACR,SAAS,EAAAgB,QAAA,CACPH,IAAI,CAACI,MAAM,GAAK,CAAC,cAChBT,IAAA,CAACJ,QAAQ,EAAAY,QAAA,cACPR,IAAA,CAACP,SAAS,EAACiB,OAAO,CAAE,CAAE,CAACC,KAAK,CAAC,QAAQ,CAAAH,QAAA,cACnCR,IAAA,CAACF,UAAU,EAACc,KAAK,CAAC,gBAAgB,CAAAJ,QAAA,CAAC,iBAAe,CAAY,CAAC,CACtD,CAAC,CACJ,CAAC,CAEXH,IAAI,CAACQ,GAAG,CAAC,CAACC,GAAG,CAAEC,KAAK,gBAClBb,KAAA,CAACN,QAAQ,EAAAY,QAAA,eACPN,KAAA,CAACT,SAAS,EAAAe,QAAA,EAAEM,GAAG,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,KAAG,EAAW,CAAC,cAClDjB,IAAA,CAACP,SAAS,EAAAe,QAAA,CAAEM,GAAG,CAACI,IAAI,CAAY,CAAC,cACjChB,KAAA,CAACT,SAAS,EAAAe,QAAA,EAAEM,GAAG,CAACK,SAAS,CAACF,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,KAAG,EAAW,CAAC,cACrDjB,IAAA,CAACP,SAAS,EAAAe,QAAA,CAAEM,GAAG,CAACM,MAAM,CAAY,CAAC,cACnCpB,IAAA,CAACP,SAAS,EAAAe,QAAA,CAAEM,GAAG,CAACO,OAAO,CAAY,CAAC,cACpCrB,IAAA,CAACP,SAAS,EAAAe,QAAA,CAAE,GAAI,CAAAc,IAAI,CAACR,GAAG,CAACS,SAAS,CAAC,CAACC,cAAc,CAAC,CAAC,CAAY,CAAC,GANpDT,KAOL,CACX,CACF,CACQ,CAAC,EACP,CAAC,CACM,CAAC,CAErB,CAAC,CAED,cAAe,CAAAZ,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}