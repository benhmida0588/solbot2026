{"ast":null,"code":"var _jsxFileName = \"/root/solana-trading-bot/frontend/src/components/ConfigForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Paper, Typography, TextField, Button, FormControl, InputLabel, Select, MenuItem, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConfigForm = ({\n  config,\n  onConfigUpdate\n}) => {\n  _s();\n  const [swapAmount, setSwapAmount] = useState(config ? config.swapAmountLamports / 1000000000 : 0.01);\n  const [tradeMode, setTradeMode] = useState((config === null || config === void 0 ? void 0 : config.tradeMode) || 'random');\n  const [concurrencyLimit, setConcurrencyLimit] = useState((config === null || config === void 0 ? void 0 : config.concurrencyLimit) || 3);\n  const [newTokenSymbol, setNewTokenSymbol] = useState('');\n  const [newTokenMint, setNewTokenMint] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    const updatedConfig = {\n      swapAmountLamports: swapAmount * 1000000000,\n      tradeMode: tradeMode,\n      concurrencyLimit\n    };\n    if (newTokenSymbol && newTokenMint) {\n      updatedConfig.tokenList = [...((config === null || config === void 0 ? void 0 : config.tokenList) || []), {\n        symbol: newTokenSymbol,\n        mint: newTokenMint\n      }];\n      setNewTokenSymbol('');\n      setNewTokenMint('');\n    }\n    onConfigUpdate(updatedConfig);\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      p: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Trading Configuration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Swap Amount (SOL)\",\n        type: \"number\",\n        value: swapAmount,\n        onChange: e => setSwapAmount(parseFloat(e.target.value)),\n        fullWidth: true,\n        margin: \"normal\",\n        inputProps: {\n          step: '0.01'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        margin: \"normal\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Trade Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: tradeMode,\n          onChange: e => setTradeMode(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"random\",\n            children: \"Random\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"buyOnly\",\n            children: \"Buy Only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"sellOnly\",\n            children: \"Sell Only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Concurrency Limit\",\n        type: \"number\",\n        value: concurrencyLimit,\n        onChange: e => setConcurrencyLimit(parseInt(e.target.value)),\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"New Token Symbol\",\n        value: newTokenSymbol,\n        onChange: e => setNewTokenSymbol(e.target.value),\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"New Token Mint\",\n        value: newTokenMint,\n        onChange: e => setNewTokenMint(e.target.value),\n        fullWidth: true,\n        margin: \"normal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        sx: {\n          mt: 2\n        },\n        children: \"Update Config\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ConfigForm, \"vSyxNTpIfeydytk/gX88eZu7hyE=\");\n_c = ConfigForm;\nexport default ConfigForm;\nvar _c;\n$RefreshReg$(_c, \"ConfigForm\");","map":{"version":3,"names":["React","useState","Paper","Typography","TextField","Button","FormControl","InputLabel","Select","MenuItem","Box","jsxDEV","_jsxDEV","ConfigForm","config","onConfigUpdate","_s","swapAmount","setSwapAmount","swapAmountLamports","tradeMode","setTradeMode","concurrencyLimit","setConcurrencyLimit","newTokenSymbol","setNewTokenSymbol","newTokenMint","setNewTokenMint","handleSubmit","e","preventDefault","updatedConfig","tokenList","symbol","mint","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","component","onSubmit","label","type","value","onChange","parseFloat","target","fullWidth","margin","inputProps","step","parseInt","mt","_c","$RefreshReg$"],"sources":["/root/solana-trading-bot/frontend/src/components/ConfigForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Box,\r\n} from '@mui/material';\r\n\r\ninterface Config {\r\n  swapAmountLamports: number;\r\n  tokenList: { symbol: string; mint: string }[];\r\n  tradeMode: 'random' | 'buyOnly' | 'sellOnly';\r\n  concurrencyLimit: number;\r\n}\r\n\r\ninterface ConfigFormProps {\r\n  config: Config | null;\r\n  onConfigUpdate: (newConfig: Partial<Config>) => void;\r\n}\r\n\r\nconst ConfigForm: React.FC<ConfigFormProps> = ({ config, onConfigUpdate }) => {\r\n  const [swapAmount, setSwapAmount] = useState(\r\n    config ? config.swapAmountLamports / 1_000_000_000 : 0.01\r\n  );\r\n  const [tradeMode, setTradeMode] = useState(config?.tradeMode || 'random');\r\n  const [concurrencyLimit, setConcurrencyLimit] = useState(\r\n    config?.concurrencyLimit || 3\r\n  );\r\n  const [newTokenSymbol, setNewTokenSymbol] = useState('');\r\n  const [newTokenMint, setNewTokenMint] = useState('');\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const updatedConfig: Partial<Config> = {\r\n      swapAmountLamports: swapAmount * 1_000_000_000,\r\n      tradeMode: tradeMode as 'random' | 'buyOnly' | 'sellOnly',\r\n      concurrencyLimit,\r\n    };\r\n    if (newTokenSymbol && newTokenMint) {\r\n      updatedConfig.tokenList = [\r\n        ...(config?.tokenList || []),\r\n        { symbol: newTokenSymbol, mint: newTokenMint },\r\n      ];\r\n      setNewTokenSymbol('');\r\n      setNewTokenMint('');\r\n    }\r\n    onConfigUpdate(updatedConfig);\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ p: 2 }}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Trading Configuration\r\n      </Typography>\r\n      <Box component=\"form\" onSubmit={handleSubmit}>\r\n        <TextField\r\n          label=\"Swap Amount (SOL)\"\r\n          type=\"number\"\r\n          value={swapAmount}\r\n          onChange={(e) => setSwapAmount(parseFloat(e.target.value))}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          inputProps={{ step: '0.01' }}\r\n        />\r\n        <FormControl fullWidth margin=\"normal\">\r\n          <InputLabel>Trade Mode</InputLabel>\r\n          <Select\r\n            value={tradeMode}\r\n            onChange={(e) =>\r\n              setTradeMode(e.target.value as 'random' | 'buyOnly' | 'sellOnly')\r\n            }\r\n          >\r\n            <MenuItem value=\"random\">Random</MenuItem>\r\n            <MenuItem value=\"buyOnly\">Buy Only</MenuItem>\r\n            <MenuItem value=\"sellOnly\">Sell Only</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <TextField\r\n          label=\"Concurrency Limit\"\r\n          type=\"number\"\r\n          value={concurrencyLimit}\r\n          onChange={(e) => setConcurrencyLimit(parseInt(e.target.value))}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"New Token Symbol\"\r\n          value={newTokenSymbol}\r\n          onChange={(e) => setNewTokenSymbol(e.target.value)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"New Token Mint\"\r\n          value={newTokenMint}\r\n          onChange={(e) => setNewTokenMint(e.target.value)}\r\n          fullWidth\r\n          margin=\"normal\"\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\" sx={{ mt: 2 }}>\r\n          Update Config\r\n        </Button>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ConfigForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,KAAK,EACLC,UAAU,EACVC,SAAS,EACTC,MAAM,EACNC,WAAW,EACXC,UAAU,EACVC,MAAM,EACNC,QAAQ,EACRC,GAAG,QACE,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAcvB,MAAMC,UAAqC,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC5E,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAC1Ca,MAAM,GAAGA,MAAM,CAACK,kBAAkB,GAAG,UAAa,GAAG,IACvD,CAAC;EACD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,CAAAa,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEM,SAAS,KAAI,QAAQ,CAAC;EACzE,MAAM,CAACE,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtB,QAAQ,CACtD,CAAAa,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEQ,gBAAgB,KAAI,CAC9B,CAAC;EACD,MAAM,CAACE,cAAc,EAAEC,iBAAiB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAM2B,YAAY,GAAIC,CAAkB,IAAK;IAC3CA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,aAA8B,GAAG;MACrCZ,kBAAkB,EAAEF,UAAU,GAAG,UAAa;MAC9CG,SAAS,EAAEA,SAA8C;MACzDE;IACF,CAAC;IACD,IAAIE,cAAc,IAAIE,YAAY,EAAE;MAClCK,aAAa,CAACC,SAAS,GAAG,CACxB,IAAI,CAAAlB,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEkB,SAAS,KAAI,EAAE,CAAC,EAC5B;QAAEC,MAAM,EAAET,cAAc;QAAEU,IAAI,EAAER;MAAa,CAAC,CAC/C;MACDD,iBAAiB,CAAC,EAAE,CAAC;MACrBE,eAAe,CAAC,EAAE,CAAC;IACrB;IACAZ,cAAc,CAACgB,aAAa,CAAC;EAC/B,CAAC;EAED,oBACEnB,OAAA,CAACV,KAAK;IAACiC,EAAE,EAAE;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAClBzB,OAAA,CAACT,UAAU;MAACmC,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACb/B,OAAA,CAACF,GAAG;MAACkC,SAAS,EAAC,MAAM;MAACC,QAAQ,EAAEjB,YAAa;MAAAS,QAAA,gBAC3CzB,OAAA,CAACR,SAAS;QACR0C,KAAK,EAAC,mBAAmB;QACzBC,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAE/B,UAAW;QAClBgC,QAAQ,EAAGpB,CAAC,IAAKX,aAAa,CAACgC,UAAU,CAACrB,CAAC,CAACsB,MAAM,CAACH,KAAK,CAAC,CAAE;QAC3DI,SAAS;QACTC,MAAM,EAAC,QAAQ;QACfC,UAAU,EAAE;UAAEC,IAAI,EAAE;QAAO;MAAE;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACF/B,OAAA,CAACN,WAAW;QAAC8C,SAAS;QAACC,MAAM,EAAC,QAAQ;QAAAhB,QAAA,gBACpCzB,OAAA,CAACL,UAAU;UAAA8B,QAAA,EAAC;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACnC/B,OAAA,CAACJ,MAAM;UACLwC,KAAK,EAAE5B,SAAU;UACjB6B,QAAQ,EAAGpB,CAAC,IACVR,YAAY,CAACQ,CAAC,CAACsB,MAAM,CAACH,KAA0C,CACjE;UAAAX,QAAA,gBAEDzB,OAAA,CAACH,QAAQ;YAACuC,KAAK,EAAC,QAAQ;YAAAX,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,eAC1C/B,OAAA,CAACH,QAAQ;YAACuC,KAAK,EAAC,SAAS;YAAAX,QAAA,EAAC;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,eAC7C/B,OAAA,CAACH,QAAQ;YAACuC,KAAK,EAAC,UAAU;YAAAX,QAAA,EAAC;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACd/B,OAAA,CAACR,SAAS;QACR0C,KAAK,EAAC,mBAAmB;QACzBC,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAE1B,gBAAiB;QACxB2B,QAAQ,EAAGpB,CAAC,IAAKN,mBAAmB,CAACiC,QAAQ,CAAC3B,CAAC,CAACsB,MAAM,CAACH,KAAK,CAAC,CAAE;QAC/DI,SAAS;QACTC,MAAM,EAAC;MAAQ;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eACF/B,OAAA,CAACR,SAAS;QACR0C,KAAK,EAAC,kBAAkB;QACxBE,KAAK,EAAExB,cAAe;QACtByB,QAAQ,EAAGpB,CAAC,IAAKJ,iBAAiB,CAACI,CAAC,CAACsB,MAAM,CAACH,KAAK,CAAE;QACnDI,SAAS;QACTC,MAAM,EAAC;MAAQ;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eACF/B,OAAA,CAACR,SAAS;QACR0C,KAAK,EAAC,gBAAgB;QACtBE,KAAK,EAAEtB,YAAa;QACpBuB,QAAQ,EAAGpB,CAAC,IAAKF,eAAe,CAACE,CAAC,CAACsB,MAAM,CAACH,KAAK,CAAE;QACjDI,SAAS;QACTC,MAAM,EAAC;MAAQ;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eACF/B,OAAA,CAACP,MAAM;QAAC0C,IAAI,EAAC,QAAQ;QAACT,OAAO,EAAC,WAAW;QAACH,EAAE,EAAE;UAAEsB,EAAE,EAAE;QAAE,CAAE;QAAApB,QAAA,EAAC;MAEzD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEZ,CAAC;AAAC3B,EAAA,CArFIH,UAAqC;AAAA6C,EAAA,GAArC7C,UAAqC;AAuF3C,eAAeA,UAAU;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}