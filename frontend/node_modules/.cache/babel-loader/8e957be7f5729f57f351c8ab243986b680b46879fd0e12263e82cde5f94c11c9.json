{"ast":null,"code":"var _jsxFileName = \"/root/solana-trading-bot/frontend/src/components/ConfigForm.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Box, TextField, Button, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConfigForm = ({\n  config,\n  onConfigUpdate\n}) => {\n  _s();\n  var _config$swapAmount, _config$concurrencyLi;\n  const [swapAmount, setSwapAmount] = useState((config === null || config === void 0 ? void 0 : (_config$swapAmount = config.swapAmount) === null || _config$swapAmount === void 0 ? void 0 : _config$swapAmount.toString()) || '0.1');\n  const [tradeMode, setTradeMode] = useState((config === null || config === void 0 ? void 0 : config.tradeMode) || 'random');\n  const [concurrencyLimit, setConcurrencyLimit] = useState((config === null || config === void 0 ? void 0 : (_config$concurrencyLi = config.concurrencyLimit) === null || _config$concurrencyLi === void 0 ? void 0 : _config$concurrencyLi.toString()) || '2');\n  const [tokenAddress, setTokenAddress] = useState((config === null || config === void 0 ? void 0 : config.tokenAddress) || '');\n  const handleSubmit = () => {\n    const newConfig = {\n      swapAmount: parseFloat(swapAmount),\n      tradeMode,\n      concurrencyLimit: parseInt(concurrencyLimit),\n      tokenAddress,\n      tokenList: (config === null || config === void 0 ? void 0 : config.tokenList) || []\n    };\n    onConfigUpdate(newConfig);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Swap Amount (SOL)\",\n      value: swapAmount,\n      onChange: e => setSwapAmount(e.target.value),\n      type: \"number\",\n      inputProps: {\n        step: '0.01'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Trade Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: tradeMode,\n        onChange: e => setTradeMode(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"random\",\n          children: \"Random\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"sequential\",\n          children: \"Sequential\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Concurrency Limit\",\n      value: concurrencyLimit,\n      onChange: e => setConcurrencyLimit(e.target.value),\n      type: \"number\",\n      inputProps: {\n        min: '1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Token Address\",\n      value: tokenAddress,\n      onChange: e => setTokenAddress(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSubmit,\n      children: \"Update Config\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ConfigForm, \"Zk6L7DVcGiimJ3WTFyjhWi1xSt8=\");\n_c = ConfigForm;\nexport default ConfigForm;\nvar _c;\n$RefreshReg$(_c, \"ConfigForm\");","map":{"version":3,"names":["useState","Box","TextField","Button","FormControl","InputLabel","Select","MenuItem","jsxDEV","_jsxDEV","ConfigForm","config","onConfigUpdate","_s","_config$swapAmount","_config$concurrencyLi","swapAmount","setSwapAmount","toString","tradeMode","setTradeMode","concurrencyLimit","setConcurrencyLimit","tokenAddress","setTokenAddress","handleSubmit","newConfig","parseFloat","parseInt","tokenList","component","sx","display","flexDirection","gap","children","label","value","onChange","e","target","type","inputProps","step","fileName","_jsxFileName","lineNumber","columnNumber","min","variant","color","onClick","_c","$RefreshReg$"],"sources":["/root/solana-trading-bot/frontend/src/components/ConfigForm.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from '@mui/material';\r\nimport { Config } from '../types';\r\n\r\ninterface ConfigFormProps {\r\n  config: Config | null;\r\n  onConfigUpdate: (newConfig: Partial<Config>) => void;\r\n}\r\n\r\nconst ConfigForm: React.FC<ConfigFormProps> = ({ config, onConfigUpdate }) => {\r\n  const [swapAmount, setSwapAmount] = useState(config?.swapAmount?.toString() || '0.1');\r\n  const [tradeMode, setTradeMode] = useState(config?.tradeMode || 'random');\r\n  const [concurrencyLimit, setConcurrencyLimit] = useState(config?.concurrencyLimit?.toString() || '2');\r\n  const [tokenAddress, setTokenAddress] = useState(config?.tokenAddress || '');\r\n\r\n  const handleSubmit = () => {\r\n    const newConfig: Partial<Config> = {\r\n      swapAmount: parseFloat(swapAmount),\r\n      tradeMode,\r\n      concurrencyLimit: parseInt(concurrencyLimit),\r\n      tokenAddress,\r\n      tokenList: config?.tokenList || [],\r\n    };\r\n    onConfigUpdate(newConfig);\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n      <TextField\r\n        label=\"Swap Amount (SOL)\"\r\n        value={swapAmount}\r\n        onChange={(e) => setSwapAmount(e.target.value)}\r\n        type=\"number\"\r\n        inputProps={{ step: '0.01' }}\r\n      />\r\n      <FormControl>\r\n        <InputLabel>Trade Mode</InputLabel>\r\n        <Select value={tradeMode} onChange={(e) => setTradeMode(e.target.value)}>\r\n          <MenuItem value=\"random\">Random</MenuItem>\r\n          <MenuItem value=\"sequential\">Sequential</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <TextField\r\n        label=\"Concurrency Limit\"\r\n        value={concurrencyLimit}\r\n        onChange={(e) => setConcurrencyLimit(e.target.value)}\r\n        type=\"number\"\r\n        inputProps={{ min: '1' }}\r\n      />\r\n      <TextField\r\n        label=\"Token Address\"\r\n        value={tokenAddress}\r\n        onChange={(e) => setTokenAddress(e.target.value)}\r\n      />\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\r\n        Update Config\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ConfigForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}