{"ast":null,"code":"import _objectSpread from\"/root/solana-trading-bot/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import{Box,TextField,Button,MenuItem,Select,FormControl,InputLabel}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ConfigForm=_ref=>{var _config$swapAmount,_config$tradeMode,_config$concurrencyLi,_config$tokenAddress,_config$swapAmountLam,_config$tokenList,_formConfig$swapAmoun,_formConfig$tradeMode,_formConfig$concurren,_formConfig$tokenAddr,_formConfig$swapAmoun2,_formConfig$tokenList;let{config,onConfigUpdate}=_ref;const[formConfig,setFormConfig]=React.useState({swapAmount:(_config$swapAmount=config===null||config===void 0?void 0:config.swapAmount)!==null&&_config$swapAmount!==void 0?_config$swapAmount:0,tradeMode:(_config$tradeMode=config===null||config===void 0?void 0:config.tradeMode)!==null&&_config$tradeMode!==void 0?_config$tradeMode:'auto',concurrencyLimit:(_config$concurrencyLi=config===null||config===void 0?void 0:config.concurrencyLimit)!==null&&_config$concurrencyLi!==void 0?_config$concurrencyLi:1,tokenAddress:(_config$tokenAddress=config===null||config===void 0?void 0:config.tokenAddress)!==null&&_config$tokenAddress!==void 0?_config$tokenAddress:'',swapAmountLamports:(_config$swapAmountLam=config===null||config===void 0?void 0:config.swapAmountLamports)!==null&&_config$swapAmountLam!==void 0?_config$swapAmountLam:1000000,tokenList:(_config$tokenList=config===null||config===void 0?void 0:config.tokenList)!==null&&_config$tokenList!==void 0?_config$tokenList:[]});const handleChange=e=>{const target=e.target;const name=target.name;const value=target.value;if(name){setFormConfig(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));}};const handleTokenListChange=newTokenList=>{setFormConfig(prev=>_objectSpread(_objectSpread({},prev),{},{tokenList:newTokenList}));};const handleSubmit=()=>{onConfigUpdate(formConfig);};return/*#__PURE__*/_jsxs(Box,{sx:{p:2,border:'1px solid grey'},children:[/*#__PURE__*/_jsx(TextField,{label:\"Swap Amount (SOL)\",name:\"swapAmount\",type:\"number\",value:(_formConfig$swapAmoun=formConfig.swapAmount)!==null&&_formConfig$swapAmoun!==void 0?_formConfig$swapAmoun:'',onChange:handleChange,fullWidth:true,margin:\"normal\"}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,margin:\"normal\",children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Trade Mode\"}),/*#__PURE__*/_jsxs(Select,{name:\"tradeMode\",value:(_formConfig$tradeMode=formConfig.tradeMode)!==null&&_formConfig$tradeMode!==void 0?_formConfig$tradeMode:'auto',onChange:handleChange,children:[/*#__PURE__*/_jsx(MenuItem,{value:\"auto\",children:\"Auto\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"manual\",children:\"Manual\"})]})]}),/*#__PURE__*/_jsx(TextField,{label:\"Concurrency Limit\",name:\"concurrencyLimit\",type:\"number\",value:(_formConfig$concurren=formConfig.concurrencyLimit)!==null&&_formConfig$concurren!==void 0?_formConfig$concurren:'',onChange:handleChange,fullWidth:true,margin:\"normal\"}),/*#__PURE__*/_jsx(TextField,{label:\"Token Address\",name:\"tokenAddress\",value:(_formConfig$tokenAddr=formConfig.tokenAddress)!==null&&_formConfig$tokenAddr!==void 0?_formConfig$tokenAddr:'',onChange:handleChange,fullWidth:true,margin:\"normal\"}),/*#__PURE__*/_jsx(TextField,{label:\"Swap Amount (Lamports)\",name:\"swapAmountLamports\",type:\"number\",value:(_formConfig$swapAmoun2=formConfig.swapAmountLamports)!==null&&_formConfig$swapAmoun2!==void 0?_formConfig$swapAmoun2:'',onChange:handleChange,fullWidth:true,margin:\"normal\"}),/*#__PURE__*/_jsx(TextField,{label:\"Token List (JSON)\",name:\"tokenList\",value:JSON.stringify((_formConfig$tokenList=formConfig.tokenList)!==null&&_formConfig$tokenList!==void 0?_formConfig$tokenList:[]),onChange:e=>{try{const tokens=JSON.parse(e.target.value);handleTokenListChange(tokens);}catch(_unused){}},fullWidth:true,margin:\"normal\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:handleSubmit,sx:{mt:2},children:\"Update Config\"})]});};export default ConfigForm;","map":{"version":3,"names":["React","Box","TextField","Button","MenuItem","Select","FormControl","InputLabel","jsx","_jsx","jsxs","_jsxs","ConfigForm","_ref","_config$swapAmount","_config$tradeMode","_config$concurrencyLi","_config$tokenAddress","_config$swapAmountLam","_config$tokenList","_formConfig$swapAmoun","_formConfig$tradeMode","_formConfig$concurren","_formConfig$tokenAddr","_formConfig$swapAmoun2","_formConfig$tokenList","config","onConfigUpdate","formConfig","setFormConfig","useState","swapAmount","tradeMode","concurrencyLimit","tokenAddress","swapAmountLamports","tokenList","handleChange","e","target","name","value","prev","_objectSpread","handleTokenListChange","newTokenList","handleSubmit","sx","p","border","children","label","type","onChange","fullWidth","margin","JSON","stringify","tokens","parse","_unused","variant","onClick","mt"],"sources":["/root/solana-trading-bot/frontend/src/components/ConfigForm.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Box, TextField, Button, MenuItem, Select, FormControl, InputLabel } from '@mui/material';\r\nimport { SelectChangeEvent } from '@mui/material/Select';\r\nimport { Config } from '../types';\r\n\r\ninterface ConfigFormProps {\r\n  config: Config | null;\r\n  onConfigUpdate: (newConfig: Partial<Config>) => void;\r\n}\r\n\r\nconst ConfigForm: React.FC<ConfigFormProps> = ({ config, onConfigUpdate }) => {\r\n  const [formConfig, setFormConfig] = React.useState<Partial<Config>>({\r\n    swapAmount: config?.swapAmount ?? 0,\r\n    tradeMode: config?.tradeMode ?? 'auto',\r\n    concurrencyLimit: config?.concurrencyLimit ?? 1,\r\n    tokenAddress: config?.tokenAddress ?? '',\r\n    swapAmountLamports: config?.swapAmountLamports ?? 1000000,\r\n    tokenList: config?.tokenList ?? [],\r\n  });\r\n\r\n  const handleChange = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement> | SelectChangeEvent<string>\r\n  ) => {\r\n    const target = e.target as HTMLInputElement | HTMLTextAreaElement | { name?: string; value: unknown };\r\n    const name = target.name;\r\n    const value = target.value;\r\n    if (name) {\r\n      setFormConfig((prev) => ({ ...prev, [name]: value }));\r\n    }\r\n  };\r\n\r\n  const handleTokenListChange = (newTokenList: { symbol: string; mint: string }[]) => {\r\n    setFormConfig((prev) => ({ ...prev, tokenList: newTokenList }));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    onConfigUpdate(formConfig);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 2, border: '1px solid grey' }}>\r\n      <TextField\r\n        label=\"Swap Amount (SOL)\"\r\n        name=\"swapAmount\"\r\n        type=\"number\"\r\n        value={formConfig.swapAmount ?? ''}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <FormControl fullWidth margin=\"normal\">\r\n        <InputLabel>Trade Mode</InputLabel>\r\n        <Select\r\n          name=\"tradeMode\"\r\n          value={formConfig.tradeMode ?? 'auto'}\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value=\"auto\">Auto</MenuItem>\r\n          <MenuItem value=\"manual\">Manual</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <TextField\r\n        label=\"Concurrency Limit\"\r\n        name=\"concurrencyLimit\"\r\n        type=\"number\"\r\n        value={formConfig.concurrencyLimit ?? ''}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Token Address\"\r\n        name=\"tokenAddress\"\r\n        value={formConfig.tokenAddress ?? ''}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Swap Amount (Lamports)\"\r\n        name=\"swapAmountLamports\"\r\n        type=\"number\"\r\n        value={formConfig.swapAmountLamports ?? ''}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        label=\"Token List (JSON)\"\r\n        name=\"tokenList\"\r\n        value={JSON.stringify(formConfig.tokenList ?? [])}\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n          try {\r\n            const tokens = JSON.parse(e.target.value);\r\n            handleTokenListChange(tokens);\r\n          } catch {}\r\n        }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <Button variant=\"contained\" onClick={handleSubmit} sx={{ mt: 2 }}>\r\n        Update Config\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ConfigForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}