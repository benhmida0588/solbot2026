{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Box,Container,Typography,Grid,Paper}from'@mui/material';import WalletTable from'./components/WalletTable';import ConfigForm from'./components/ConfigForm';import TransactionLog from'./components/TransactionLog';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[mainWallet,setMainWallet]=useState(null);const[wallets,setWallets]=useState([]);const[transactionLogs,setTransactionLogs]=useState([]);const[config,setConfig]=useState(null);useEffect(()=>{const ws=new WebSocket('ws://localhost:3002');ws.onmessage=event=>{const data=JSON.parse(event.data);setMainWallet(data.mainWallet);setWallets(data.wallets);setTransactionLogs(data.transactionLogs);setConfig(data.config);};ws.onclose=()=>console.log('WebSocket disconnected');ws.onerror=err=>console.error('WebSocket error:',err);return()=>ws.close();},[]);const handleCreateWallets=async()=>{try{await axios.post('http://localhost:3001/api/create-wallets');alert('Wallets created successfully');}catch(err){alert('Error creating wallets: '+err.message);}};const handleFundWallets=async()=>{try{await axios.post('http://localhost:3001/api/fund-wallets');alert('Wallets funded successfully');}catch(err){alert('Error funding wallets: '+err.message);}};const handleTradeWallets=async()=>{try{await axios.post('http://localhost:3001/api/trade-wallets');alert('Trading started successfully');}catch(err){alert('Error starting trading: '+err.message);}};const handleConfigUpdate=async newConfig=>{try{await axios.post('http://localhost:3001/api/config',newConfig);alert('Config updated successfully');}catch(err){alert('Error updating config: '+err.message);}};return/*#__PURE__*/_jsx(Container,{maxWidth:\"lg\",children:/*#__PURE__*/_jsxs(Box,{sx:{my:4},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"Solana Trading Bot\"}),mainWallet&&/*#__PURE__*/_jsxs(Paper,{sx:{p:2,mb:4},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[\"Main Wallet: \",mainWallet.publicKey]}),/*#__PURE__*/_jsxs(Typography,{children:[\"Balance: \",(mainWallet.balance/1000000000).toFixed(4),\" SOL\"]})]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:4,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(WalletTable,{wallets:wallets,onCreateWallets:handleCreateWallets,onFundWallets:handleFundWallets,onTradeWallets:handleTradeWallets})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(ConfigForm,{config:config,onConfigUpdate:handleConfigUpdate})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TransactionLog,{logs:transactionLogs})})]})]})});};export default App;","map":{"version":3,"names":["React","useEffect","useState","Box","Container","Typography","Grid","Paper","WalletTable","ConfigForm","TransactionLog","axios","jsx","_jsx","jsxs","_jsxs","App","mainWallet","setMainWallet","wallets","setWallets","transactionLogs","setTransactionLogs","config","setConfig","ws","WebSocket","onmessage","event","data","JSON","parse","onclose","console","log","onerror","err","error","close","handleCreateWallets","post","alert","message","handleFundWallets","handleTradeWallets","handleConfigUpdate","newConfig","maxWidth","children","sx","my","variant","gutterBottom","p","mb","publicKey","balance","toFixed","container","spacing","item","xs","md","onCreateWallets","onFundWallets","onTradeWallets","onConfigUpdate","logs"],"sources":["/root/solana-trading-bot/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Box, Container, Typography, Grid, Paper } from '@mui/material';\r\nimport WalletTable from './components/WalletTable';\r\nimport ConfigForm from './components/ConfigForm';\r\nimport TransactionLog from './components/TransactionLog';\r\nimport axios from 'axios';\r\n\r\ninterface MainWallet {\r\n  publicKey: string;\r\n  balance: number;\r\n}\r\n\r\ninterface Wallet {\r\n  publicKey: string;\r\n  solBalance: number;\r\n  tokenBalances: { [mint: string]: number };\r\n  tradeStatus: string;\r\n}\r\n\r\ninterface TransactionLog {\r\n  wallet: string;\r\n  type: string;\r\n  signature: string;\r\n  status: string;\r\n  details: string;\r\n  timestamp: string;\r\n}\r\n\r\ninterface Config {\r\n  swapAmountLamports: number;\r\n  tokenList: { symbol: string; mint: string }[];\r\n  tradeMode: 'random' | 'buyOnly' | 'sellOnly';\r\n  concurrencyLimit: number;\r\n}\r\n\r\nconst App: React.FC = () => {\r\n  const [mainWallet, setMainWallet] = useState<MainWallet | null>(null);\r\n  const [wallets, setWallets] = useState<Wallet[]>([]);\r\n  const [transactionLogs, setTransactionLogs] = useState<TransactionLog[]>([]);\r\n  const [config, setConfig] = useState<Config | null>(null);\r\n\r\n  useEffect(() => {\r\n    const ws = new WebSocket('ws://localhost:3002');\r\n\r\n    ws.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      setMainWallet(data.mainWallet);\r\n      setWallets(data.wallets);\r\n      setTransactionLogs(data.transactionLogs);\r\n      setConfig(data.config);\r\n    };\r\n\r\n    ws.onclose = () => console.log('WebSocket disconnected');\r\n    ws.onerror = (err) => console.error('WebSocket error:', err);\r\n\r\n    return () => ws.close();\r\n  }, []);\r\n\r\n  const handleCreateWallets = async () => {\r\n    try {\r\n      await axios.post('http://localhost:3001/api/create-wallets');\r\n      alert('Wallets created successfully');\r\n    } catch (err) {\r\n      alert('Error creating wallets: ' + (err as Error).message);\r\n    }\r\n  };\r\n\r\n  const handleFundWallets = async () => {\r\n    try {\r\n      await axios.post('http://localhost:3001/api/fund-wallets');\r\n      alert('Wallets funded successfully');\r\n    } catch (err) {\r\n      alert('Error funding wallets: ' + (err as Error).message);\r\n    }\r\n  };\r\n\r\n  const handleTradeWallets = async () => {\r\n    try {\r\n      await axios.post('http://localhost:3001/api/trade-wallets');\r\n      alert('Trading started successfully');\r\n    } catch (err) {\r\n      alert('Error starting trading: ' + (err as Error).message);\r\n    }\r\n  };\r\n\r\n  const handleConfigUpdate = async (newConfig: Partial<Config>) => {\r\n    try {\r\n      await axios.post('http://localhost:3001/api/config', newConfig);\r\n      alert('Config updated successfully');\r\n    } catch (err) {\r\n      alert('Error updating config: ' + (err as Error).message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Box sx={{ my: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Solana Trading Bot\r\n        </Typography>\r\n        {mainWallet && (\r\n          <Paper sx={{ p: 2, mb: 4 }}>\r\n            <Typography variant=\"h6\">\r\n              Main Wallet: {mainWallet.publicKey}\r\n            </Typography>\r\n            <Typography>\r\n              Balance: {(mainWallet.balance / 1_000_000_000).toFixed(4)} SOL\r\n            </Typography>\r\n          </Paper>\r\n        )}\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12} md={6}>\r\n            <WalletTable\r\n              wallets={wallets}\r\n              onCreateWallets={handleCreateWallets}\r\n              onFundWallets={handleFundWallets}\r\n              onTradeWallets={handleTradeWallets}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <ConfigForm config={config} onConfigUpdate={handleConfigUpdate} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TransactionLog logs={transactionLogs} />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}